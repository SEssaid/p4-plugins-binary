<?xml version = "1.0" encoding = "utf-8"?>

<project name = "Binary Install into Protege" default = "install" basedir = ".">    

   <!-- 
        To run this build file set the environment variable
        PROTEGE_HOME to point to a protege distribution and type ant
        install or jar.
     -->

   <property environment="env"/>
   <property name = "protege.home"      location="${env.PROTEGE_HOME}"/>
   <property file="${protege.home}/build.properties"/>
   <property file="local.properties"/>

   <property name = "protege.common"    location="${protege.home}/bundles"/>   
   <property name = "protege.plugins"   location="${protege.home}/plugins"/>

   <property name="common.lib"
             location="${protege.common}/org.protege.common.jar"/>
   <property name="protege.lib" 
             location="${protege.common}/org.protege.editor.core.application.jar"/>

   <property name = "build"             location="./build"/>
   <property name = "classes"           location="${build}/classes"/>
   <property name = "genlib"            location = "${build}/lib"/>
	
   <!-- ============================================================= -->
   <!--             Configuring the Compile Classpath                 -->
   <!-- ============================================================= -->


    <target name="checkProtegeLibsAndReport" depends="checkProtegeLibs"
            unless="libs.found">
      <echo message="Missing protege libraries.  You need to set "/>
      <echo message="the PROTEGE_HOME environment variable to a"/>
      <echo message="protege installation directory where the"/>
      <echo message="appropriate plugins have been installed."/>
      <echo message="Alternatively set the jar libs in local.properties (protege.lib=...)"/>
      <echo message="Use the -v option to ant to see what jars are missing."/>
      <fail message = "missing protege libraries"/>
    </target>

   <target name = "checkProtegeLibs" depends="init">
     <echo message="**********************************************************"/>
     <echo message="Using Protege Home = ${protege.home}"/>
     <echo message="Using Java Version = ${ant.java.version}" />
     <echo message="**********************************************************"/>
     <condition property="libs.found">
       <and>
         <available file="${protege.osgi}" type = "file"/>
         <available file="${common.lib}"   type = "file"/>
         <available file="${protege.lib}"  type = "file"/>
       </and>
     </condition>
     <path id = "project.classpath">    
       <pathelement location="${protege.osgi}"/>
       <pathelement location="${protege.lib}"/>
       <fileset dir="${genlib}"/>
     </path>
   </target>


   <target name = "buildlibs" depends="checkProtegeLibsAndReport">
       <unjar dest="${build}"
              src="${common.lib}">
           <patternset>
               <include name = "**/log4j.jar"/>
           </patternset>
       </unjar>
   </target>


   <target name = "init">
     <mkdir dir = "${build}"/>
     <mkdir dir = "${classes}"/>
     <mkdir dir = "${genlib}"/>
   </target>  


   <target name="compile" depends="init,buildlibs">
   	   <javac srcdir="./src" destdir="${classes}">
           <classpath refid = "project.classpath"/>
       </javac>
   </target>

   <target name="install" depends="compile">
       <java classname="org.protege.install.binary.GetPlugins" fork="true">
       	   <jvmarg value="-Dlog4j.configuration=file:log4j.xml"/>
           <!-- <jvmarg value = "-agentlib:jdwp=transport=dt_socket,address=8500,server=y,suspend=n"/> -->
           <classpath>
           	   <path refid = "project.classpath"/>
           	   <pathelement location="${classes}"/>
           </classpath>
       </java>
       <copy todir="${protege.plugins}">
           <fileset dir="${build}" includes="*.jar"/>
       </copy>
       <copy todir="${protege.plugins}" file="org.semanticweb.HermiT.jar"/>
   </target>

   <target name="clean">
     <delete dir="${build}"/>
   </target>
           

</project>
